openapi: 3.0.1
info:
  title: Miiingle.NET API
  description: API for the Mobile Application
  contact:
    email: contact@miiingle.net
  version: 0.0.1
servers:
  - url: https://api.miiingle.net
    description: Prod
    variables: {}
tags:
  - name: Registration
    description: The process of creating an account attributed to various login options
paths:
  /registrations:
    get:
      tags:
        - Registration
      summary: List all Registrations
      description: This will list all the registrations for the server
      operationId: findAll
      parameters:
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/APIError'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelRegistration'
    post:
      tags:
        - Registration
      summary: Create a new Registration
      description: This will create the new Registration and return the version with
        an ID
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/APIError'
        "201":
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/EntityModelRegistration'
  /registrations/search:
    get:
      tags:
        - Registration
      summary: List all available search options
      description: Applications can filter out the list of registrations using any
        of the following APIs
      operationId: search
      parameters:
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/APIError'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelRegistration'
  /registrations/search/byFirstName:
    get:
      tags:
        - Registration
      summary: Search Registrations by their first name
      description: This will list all the registrations matching the first name
      operationId: findByFirstName
      parameters:
        - name: firstName
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/APIError'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelRegistration'
  /registrations/{id}:
    get:
      tags:
        - Registration
      summary: Get the specific Registration by ID
      description: This will list all the registrations matching the ID in the path
        params
      operationId: findOne
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/APIError'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/EntityModelRegistration'
    put:
      tags:
        - Registration
      summary: Update Registration
      description: This will update the registration completely
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/APIError'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/EntityModelRegistration'
    patch:
      tags:
        - Registration
      summary: Partially Update Registration
      description: This will partially update the registration
      operationId: partiallyUpdate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Contact's address to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/APIError'
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/EntityModelRegistration'
components:
  schemas:
    APIError:
      type: object
      properties:
        error:
          type: string
          enum:
            - GENERIC
        errorDescription:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    EntityModelRegistration:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        type:
          type: string
          enum:
            - FACEBOOK
            - EMAIL
        _links:
          $ref: '#/components/schemas/Links'
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelRegistration:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            registrations:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelRegistration'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Registration:
      required:
        - firstName
        - fullName
        - lastName
        - type
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        type:
          type: string
          enum:
            - FACEBOOK
            - EMAIL
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
